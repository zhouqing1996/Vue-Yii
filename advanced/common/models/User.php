<?php
namespace common\models;

use Yii;
use yii\base\NotSupportedException;
use yii\behaviors\TimestampBehavior;
use yii\db\ActiveRecord;
use yii\web\IdentityInterface;

/**
 * User model
 *
 * @property integer $id
 * @property string $username
 * @property string $password
 * @property string $token
 * * @property integer $role
 * @property integer $status
 */
class User extends ActiveRecord implements IdentityInterface
{
    const MSTATUS = 1;
    
    public static function tableName()
    {
        return 'user';
    }
    public function rules()
    {
        return [
        [['id','username','password','role','status'],'required'],
        [['id','role','status'],'integer'],
        [['username','password','token'],'string','max'=>255],
        ];
    }
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'username' => 'Username',
            'password' => 'Password',
            'token' => 'Token',
            'role' => 'Role',
            'status' => 'Status',
        ];
    }
    public function behaviors()
    {
        return [TimestampBehavior::className(),]; // TODO: Change the autogenerated stub
    }

    //生成token
    public function generateAccessToken()
    {
        $this->token = \Yii::$app->security->generateRandomString();
    }

    public static function findIdentity($id)
    {
        return static::findOne(['id'=>$id,'status'=>self::MSTATUS]);// TODO: Implement findIdentity() method.
    }

    public static function findIdentityByAccessToken($token, $type = null)
    {
        return static::findOne(['token'=>$token]);// TODO: Implement findIdentityByAccessToken() method.
    }

    public function getId()
    {
        return $this->getPrimaryKey();// TODO: Implement getId() method.
    }

    public function getAuthKey()
    {
        // TODO: Implement getAuthKey() method.
    }

    public function validateAuthKey($authKey)
    {
        // TODO: Implement validateAuthKey() method.
    }
}